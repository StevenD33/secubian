---
- name: Secubian
  hosts: all
  become: yes
  
  pre_tasks:
    - name: update repositories
      apt: update_cache=yes
      changed_when: False

  vars:
      casesDir: "/home/{{ ansible_user }}/Documents/Cases"
      toolsDir: "/home/{{ ansible_user }}/Documents/Tools"
      documentationDir: "/home/{{ ansible_user }}/Documents/Documentation"
      DFIR_toolsDir: "{{ toolsDir }}/DFIR"
      OSINT_toolsDir: "{{ toolsDir }}/OSINT"


  tasks: 
   - name: create directory if they don't exist
     file:
       path: "{{ item }}"
       state: directory
       owner: "{{ ansible_user }}"
       group: "{{ ansible_user }}"
       mode: 0775
     loop:
       - "{{ casesDir }}"
       - "{{ DFIR_toolsDir }}"
       - "{{ OSINT_toolsDirÂ }}"

   - include: tasks/requirements_packages.yml
   - include: tasks/python2.yml
   - include: tasks/gnome.yml
   - include: tasks/vscode.yml
   - include: tasks/firefox.yml
   - include: tasks/docker.yml
   - include: tasks/secubian-jupyternotebook.yml
   - include: tasks/sphinx-wiki.yml
   #- include: tasks/forensic/bulk_extractor.yml
   - include: tasks/forensic/capa.yml
   - include: tasks/forensic/CIRCLE_Hashlookup.yml
   - include: tasks/forensic/didierStevens.yml
   - include: tasks/forensic/IRISWeb.yml
   - include: tasks/forensic/timesketch.yml
   - include: tasks/forensic/velociraptor.yml
   - include: tasks/forensic/volatility.yml
   - include: tasks/forensic/volatility3.yml
   - include: tasks/forensic/zircolite.yml
   - include: tasks/osint/ct-exposer.yml

   - name: Install - AV Security tools
     apt:
       name: 
         - clamav
       state: present

   - name: Install - Forensic Python2 modules
     become_user: "{{ ansible_user }}"
     ansible.builtin.pip:
       name: 
         - dissect
         - evtxtract
         - lxml
         - officedissector
         - peepdf
         - pillow
       virtualenv: "$HOME/.pyenv/versions/2.7.18"
       virtualenv_command: $HOME/.pyenv/bin/pyenv virtualenv 2.7.18

   - name: Install - Forensic Python3 modules
     become_user: "{{ ansible_user }}"
     ansible.builtin.pip:
       name: 
         - eml_parser
         - extract-msg
         - msg_parser[rtf]
         - oletools
         - pillow
       executable: pip3

   - name: Install - Forensic Security tools
     apt:
       name: 
         - binwalk
         - chntpw
         - dc3dd
         - exiftool
         - extundelete 
         - foremost
         - forensics-full
         - forensics-extra
         - gddrescue
         - hexedit
         - libevtx-utils
         - libewf-dev
         - libguestfs-tools
         - libvshadow-utils
         - python3-ssdeep
         - scalpel
         - sleuthkit
         - sqlitebrowser
         - testdisk
       state: present

   - name: "Install - Forensic Security tools (Github.com)"
     become_user: "{{ ansible_user }}"
     git:
       repo: "{{ item.repo }}"
       accept_hostkey: yes
       dest: "{{ item.dest }}"
       recursive: yes
     with_items:
       - { repo: "https://github.com/JPCERTCC/LogonTracer.git", dest: "{{ DFIR_toolsDir }}/LogonTracer" }
       - { repo: "https://github.com/countercept/chainsaw.git", dest: "{{ DFIR_toolsDir }}/chainsaw" }

   - name: Install - Network Python3 modules
     become_user: "{{ ansible_user }}"
     ansible.builtin.pip:
       name: 
         - scapy
         - setuptools
       executable: pip3

   - name: Install - Network Security tools
     apt:
       name: 
         - network-manager-openvpn-gnome
         - nmap
         - openvpn
         - python3-scapy
         - tcpdump
         - tshark
         - wireshark
       state: present

   - name: Install - OSINT Python modules
     become_user: "{{ ansible_user }}"
     ansible.builtin.pip:
       name: 
         - bbot # https://github.com/blacklanternsecurity/bbot
       executable: pip3

   - name: Install - Pentest tools
     apt:
       name: 
         - cewl
         - ffuf
         - fierce
         - hashcat
         - john
         - macchanger
         - nikto
         - proxychains
         - proxychains4
         - socat
         - sqlmap
         - whatweb
       state: present

   - name: Install - Malware Analysis
     apt:
       name: 
         - droidlysis
         - strace
       state: present

   - name: Install - Malware Analysis Python3 modules
     become_user: "{{ ansible_user }}"
     ansible.builtin.pip:
       name: 
         - defang               # https://pypi.org/project/defang/
         - quicksand            # https://github.com/tylabs/quicksand
         #- stringsifter~=2.0    # https://github.com/mandiant/stringsifter  <-- pb durant l'installation
         - XLMMacroDeobfuscator # https://github.com/DissectMalware/XLMMacroDeobfuscator
       executable: pip3

   - name: Download SANS Documentation
     copy: 
      src: "../documentation/" 
      dest: "{{ documentationDir }}" 
      owner: "{{ ansible_user }}" 
      group: "{{ ansible_user }}" 
      mode: 600

   - name: "Bash | Add aliases"
     become_user: "{{ ansible_user }}"
     lineinfile:
       dest: "~/.bash_aliases"
       create: yes
       mode: 0644
       line: "alias {{ item.alias }}='{{ item.commandLine }}'"
       regexp: "^alias {{ item.alias }}="
     with_items:
       - { alias: "ll", commandLine: "ls -la" }
       - { alias: "dockerplaso", commandLine: "sudo docker run --rm -v $(pwd):/data -w /data log2timeline/plaso psort"}
       - { alias: "dockerl2t", commandLine: "sudo docker run --rm -v $(pwd):/data -w /data log2timeline/plaso log2timeline"}

   - name: Docker build
     ansible.builtin.shell: docker pull {{ item.docker }};
     with_items:
       - { docker: "log2timeline/plaso" }

   - name: Docker disable auto start all containers
     ansible.builtin.shell: docker update --restart=no $(docker ps -a -q) 2>/dev/null;

   #- name: Debian Backports upgrade
   #  ansible.builtin.shell: apt update; apt upgrade -t bullseye-backports -y;

   - name: Debian upgrade
     ansible.builtin.shell: apt update; apt upgrade -y;

   - name: upload cases
     copy: 
      src: "/Users/kidrek/SynologyDrive/00_Cybersecurity/00_projects/202302_secubian_jupyternotebook/dfir/payloads_and_dumps" 
      dest: "{{ casesDir }}" 
      owner: "{{ ansible_user }}" 
      group: "{{ ansible_user }}" 
      mode: 600
     tags: 
       - dumps
